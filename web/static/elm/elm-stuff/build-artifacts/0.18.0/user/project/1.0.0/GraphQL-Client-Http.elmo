var _user$project$GraphQL_Client_Http$RequestError = F2(
	function (a, b) {
		return {message: a, locations: b};
	});
var _user$project$GraphQL_Client_Http$DocumentLocation = F2(
	function (a, b) {
		return {line: a, column: b};
	});
var _user$project$GraphQL_Client_Http$RequestOptions = F5(
	function (a, b, c, d, e) {
		return {method: a, headers: b, url: c, timeout: d, withCredentials: e};
	});
var _user$project$GraphQL_Client_Http$GraphQLError = function (a) {
	return {ctor: 'GraphQLError', _0: a};
};
var _user$project$GraphQL_Client_Http$HttpError = function (a) {
	return {ctor: 'HttpError', _0: a};
};
var _user$project$GraphQL_Client_Http$send = F2(
	function (requestOptions, request) {
		var variableValues = _user$project$GraphQL_Request_Builder$jsonVariableValues(request);
		var decoder = _user$project$GraphQL_Request_Builder$responseDataDecoder(request);
		var documentString = _user$project$GraphQL_Request_Builder$requestBody(request);
		return A2(
			_elm_lang$core$Task$mapError,
			A2(_user$project$GraphQL_Client_Http_Util$convertHttpError, _user$project$GraphQL_Client_Http$HttpError, _user$project$GraphQL_Client_Http$GraphQLError),
			_elm_lang$http$Http$toTask(
				_elm_lang$http$Http$request(
					A4(_user$project$GraphQL_Client_Http_Util$requestConfig, requestOptions, documentString, decoder, variableValues))));
	});
var _user$project$GraphQL_Client_Http$sendQuery = function (_p0) {
	return _user$project$GraphQL_Client_Http$send(
		_user$project$GraphQL_Client_Http_Util$defaultRequestOptions(_p0));
};
var _user$project$GraphQL_Client_Http$sendMutation = function (_p1) {
	return _user$project$GraphQL_Client_Http$send(
		_user$project$GraphQL_Client_Http_Util$defaultRequestOptions(_p1));
};
var _user$project$GraphQL_Client_Http$customSendQuery = _user$project$GraphQL_Client_Http$send;
var _user$project$GraphQL_Client_Http$customSendMutation = _user$project$GraphQL_Client_Http$send;
