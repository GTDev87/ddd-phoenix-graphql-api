var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$update = F2(
	function (_p0, model) {
		var _p1 = _p0;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Maybe$Just(_p1._0),
			_1: _elm_lang$core$Platform_Cmd$none
		};
	});
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				_elm_lang$core$Basics$toString(model)),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$sendQueryRequest = function (request) {
	return A2(_user$project$GraphQL_Client_Http$sendQuery, '/api', request);
};
var _user$project$Main$UserSummary = F4(
	function (a, b, c, d) {
		return {id: a, name: b, email: c, posts: d};
	});
var _user$project$Main$PostSummary = F3(
	function (a, b, c) {
		return {id: a, title: b, body: c};
	});
var _user$project$Main$postsRequest = A2(
	_user$project$GraphQL_Request_Builder$request,
	{},
	_user$project$GraphQL_Request_Builder$queryDocument(
		_user$project$GraphQL_Request_Builder$extract(
			A3(
				_user$project$GraphQL_Request_Builder$field,
				'posts',
				{ctor: '[]'},
				_user$project$GraphQL_Request_Builder$list(
					A2(
						_user$project$GraphQL_Request_Builder$with,
						A3(
							_user$project$GraphQL_Request_Builder$field,
							'body',
							{ctor: '[]'},
							_user$project$GraphQL_Request_Builder$nullable(_user$project$GraphQL_Request_Builder$string)),
						A2(
							_user$project$GraphQL_Request_Builder$with,
							A3(
								_user$project$GraphQL_Request_Builder$field,
								'title',
								{ctor: '[]'},
								_user$project$GraphQL_Request_Builder$nullable(_user$project$GraphQL_Request_Builder$string)),
							A2(
								_user$project$GraphQL_Request_Builder$with,
								A3(
									_user$project$GraphQL_Request_Builder$field,
									'id',
									{ctor: '[]'},
									_user$project$GraphQL_Request_Builder$nullable(_user$project$GraphQL_Request_Builder$string)),
								_user$project$GraphQL_Request_Builder$object(_user$project$Main$PostSummary)))))))));
var _user$project$Main$UserPosts = function (a) {
	return {ctor: 'UserPosts', _0: a};
};
var _user$project$Main$ReceiveQueryResponse = function (a) {
	return {ctor: 'ReceiveQueryResponse', _0: a};
};
var _user$project$Main$sendPostsQuery = A2(
	_elm_lang$core$Task$attempt,
	_user$project$Main$ReceiveQueryResponse,
	_user$project$Main$sendQueryRequest(_user$project$Main$postsRequest));
var _user$project$Main$init = {ctor: '_Tuple2', _0: _elm_lang$core$Maybe$Nothing, _1: _user$project$Main$sendPostsQuery};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
