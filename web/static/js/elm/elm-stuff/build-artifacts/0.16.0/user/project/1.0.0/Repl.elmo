Elm.Repl = Elm.Repl || {};
Elm.Repl.make = function (_elm) {
   "use strict";
   _elm.Repl = _elm.Repl || {};
   if (_elm.Repl.values) return _elm.Repl.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var tsol = {ctor: "_Tuple0"};
   var square = function (x) {    return x * x;};
   var isEven = function (x) {
      return _U.eq(A2($Basics._op["%"],x,2),0);
   };
   var oddSquare = function (_p0) {
      return $Basics.not(isEven(square(_p0)));
   };
   var deltron3030 = $Html$Attributes.id;
   return _elm.Repl.values = {_op: _op
                             ,deltron3030: deltron3030
                             ,isEven: isEven
                             ,oddSquare: oddSquare
                             ,square: square
                             ,tsol: tsol};
};