Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Actions = Elm.Actions.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Effects = Elm.Effects.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Model = Elm.Model.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Task = Elm.Task.make(_elm),
   $Update = Elm.Update.make(_elm),
   $View = Elm.View.make(_elm);
   var _op = {};
   var closeModal = Elm.Native.Port.make(_elm).outboundSignal("closeModal",
   function (v) {
      return [];
   },
   $Update.closeModalMailbox.signal);
   var actionsMailbox = $Signal.mailbox(_U.list([]));
   var oneActionAddress = A2($Signal.forwardTo,
   actionsMailbox.address,
   function (action) {
      return _U.list([action]);
   });
   var modelAndFxSignal = function () {
      var initial = {ctor: "_Tuple2"
                    ,_0: $Model.initialModel
                    ,_1: $Effects.none};
      var modelAndFx = F2(function (action,_p0) {
         var _p1 = _p0;
         return A2($Update.update,action,_p1._0);
      });
      var modelAndManyFxs = F2(function (actions,_p2) {
         var _p3 = _p2;
         return A3($List.foldl,
         modelAndFx,
         {ctor: "_Tuple2",_0: _p3._0,_1: $Effects.none},
         actions);
      });
      return A3($Signal.foldp,
      modelAndManyFxs,
      initial,
      actionsMailbox.signal);
   }();
   var modelSignal = A2($Signal.map,$Basics.fst,modelAndFxSignal);
   var main = A2($Signal.map,
   $View.view(oneActionAddress),
   modelSignal);
   var fxSignal = A2($Signal.map,$Basics.snd,modelAndFxSignal);
   var taskSignal = A2($Signal.map,
   $Effects.toTask(actionsMailbox.address),
   fxSignal);
   var tasks = Elm.Native.Task.make(_elm).performSignal("tasks",
   taskSignal);
   return _elm.Main.values = {_op: _op
                             ,actionsMailbox: actionsMailbox
                             ,oneActionAddress: oneActionAddress
                             ,modelSignal: modelSignal
                             ,modelAndFxSignal: modelAndFxSignal
                             ,main: main
                             ,fxSignal: fxSignal
                             ,taskSignal: taskSignal};
};